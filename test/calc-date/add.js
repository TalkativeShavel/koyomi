// 日計算
var Koyomi = require('../..');
var add = Koyomi.add;
var eq = require('assert').deepEqual;

eq(add('2015-1-1', '5年'), new Date(2020, 0, 1));
eq(add('2015-1-2', '5日'), new Date(2015, 0, 7));

eq(add('2015-1-1 00:00:00', '1年')  , new Date(2016, 0, 1         ));
eq(add('2015-1-1 00:00:00', '1ヶ月'), new Date(2015, 1, 1         ));
eq(add('2015-1-1 00:00:00', '1週間'), new Date(2015, 0, 8         ));
eq(add('2015-1-1 00:00:00', '1日')  , new Date(2015, 0, 2         ));
eq(add('2015-1-1 00:00:00', '1時間'), new Date(2015, 0, 1, 1, 0, 0));
eq(add('2015-1-1 00:00:00', '1分')  , new Date(2015, 0, 1, 0, 1, 0));
eq(add('2015-1-1 00:00:00', '1秒')  , new Date(2015, 0, 1, 0, 0, 1));


eq(add('2015-2-28', '1年'), new Date(2016, 1, 28));
eq(add('2016-2-29', '1年'), new Date(2017, 1, 28));
eq(add('2016-2-29', '4年'), new Date(2020, 1, 29));

eq(add('2015-1-31', '0ケ月'), new Date(2015, 0, 31));
eq(add('2015-1-31', '1ケ月'), new Date(2015, 1, 28));
eq(add('2015-1-31', '2ケ月'), new Date(2015, 2, 31));
eq(add('2015-1-31', '3ケ月'), new Date(2015, 3, 30));

eq(add('2015-1-1', '1年3ヶ月'), new Date(2016, 3, 1));

eq(add('2016-1-1', '春まで'), null);
eq(add('2016-1-1', 'あと1日'), null);